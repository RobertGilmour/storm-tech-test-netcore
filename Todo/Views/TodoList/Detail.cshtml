@using Todo.Controllers
@using Todo.Data.Entities
@using Todo.Models.TodoLists
@using Todo.Services
@using Todo.Views.TodoItem
@model Todo.Models.TodoLists.TodoListDetailViewmodel

@{
    ViewData["Title"] = $"List: {Model.Title}";
}

<h2>@ViewData["Title"]</h2>

<div class="col-md-6">

    <ul class="list-group">

        <li class="list-group-item">
            <div class="row">
                <div class="col-xs-8">
                    <a asp-action="Create" asp-controller="TodoItem" asp-route-todoListId="@Model.TodoListId">
                        <strong>Add New Item</strong>
                    </a>
                </div>
                
                <div class="col-xs-4 text-right">
                    <a data-toggle="collapse" href="#collapseOptions" role="button">
                        <small>Options</small>
                    </a>
                </div>

                <div class="collapse" id="collapseOptions">
                    <hr style="margin-top: 32px;" />
                    <form asp-action="Detail" asp-controller="TodoList" method="get">
                        @Html.HiddenFor(m => m.TodoListId)

                        <div class="custom-control custom-checkbox col-md-6">
                            <input type="checkbox" class="custom-control-input" asp-for="HideCompletedItems">
                            <label class="custom-control-label" asp-for="HideCompletedItems"></label>
                        </div>

                        <div class="form-group col-xs-12">
                            <label asp-for="OrderByField"></label>
                            @Html.DropDownListFor(
                                m => m.OrderByField,
                                SelectListConvenience.TodoListDetailsSortFields,
                                new { @class = "form-control form-control-sm" }
                                )
                            <span asp-validation-for="OrderByField" class="text-danger"></span>
                        </div>

                        <div class="form-group col-xs-12 text-right">
                            <input type="submit" value="Apply Options" class="btn btn-primary" />
                        </div>
                    </form>
                </div>
            </div>
        </li>

        @foreach (var item in Model.Items)
        {
            string contextualClass;
            switch (item.Importance)
            {
                case Importance.High:
                    contextualClass = "list-group-item-danger";
                    break;
                case Importance.Low:
                    contextualClass = "list-group-item-info";
                    break;
                default:
                    contextualClass = "";
                    break;
            }

            <li class="list-group-item @contextualClass">
                
                <div class="row">

                <div class="col-md-8">
                    <a asp-action="Edit" asp-controller="TodoItem" asp-route-todoItemId="@item.TodoItemId">

                        @if (item.IsDone)
                        {
                            <s>@item.Title</s>
                        }
                        else
                        {
                            <text>@item.Title</text>
                        }
                    </a>
                </div>

                <div class="col-md-4 text-right">
                    <small>
                        @(item.ResponsibleParty.FullName == null 
                            ? @item.ResponsibleParty.UserName 
                            : $"{item.ResponsibleParty.FullName} ({@item.ResponsibleParty.UserName})")

                        <img src="https://www.gravatar.com/avatar/@Gravatar.GetHash(item.ResponsibleParty.Email)?s=30" />

                    </small>
                </div>
                </div>

            </li>
        }
    </ul>
</div>